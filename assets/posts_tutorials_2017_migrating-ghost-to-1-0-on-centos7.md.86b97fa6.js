import{_ as o,c as e,o as t,a as s}from"./app.7001bd85.js";const f='{"title":"Migrating Ghost to 1.0 from 0.11.x on CentOS 7","description":"","frontmatter":{"title":"Migrating Ghost to 1.0 from 0.11.x on CentOS 7","date":"2017-07-29T09:31:01.000Z","tags":["ghost","linux","centos"],"author":"dyzdyz010","collection":"tutorials"},"headers":[{"level":2,"title":"Backup","slug":"backup"},{"level":2,"title":"Install","slug":"install"}],"relativePath":"posts/tutorials/2017/migrating-ghost-to-1-0-on-centos7.md"}',a={},n=s(`<p>Ghost has released 1.0, with breaking changes so there&#39;s no smooth upgrading method but to take a fresh install. Here&#39;s my migration of this blog to Ghost 1.0.</p><p>There&#39;s already <a href="https://docs.ghost.org/docs/migrating-to-ghost-1-0-0" target="_blank" rel="noopener noreferrer">an official tutorial</a> to help you walk this through, but since it <strong>only supports Ubuntu officially</strong>, so I have to explore my own way on my <code>CentOS 7</code> server. It turns out that there&#39;s not much modifications compared to Ubuntu version, so I&#39;m just writing this down as a record of my migration.</p><h2 id="backup" tabindex="-1">Backup <a class="header-anchor" href="#backup" aria-hidden="true">#</a></h2><p>The new version of Ghost uses almost-the-same data structure as the older version, so backup your content by following:</p><ul><li><p>Go to you <code>Admin</code> section, under <code>Labs</code>, click <code>Export</code> to make a backup json file of your posts, custom code injections, etc.</p></li><li><p>Go to you site directory on your server to make a copy of <code>content</code> folder, your images lives there.</p></li><li><p>Backup your <code>themes</code> folder as well, in case you put custom files in it, <code>highlightjs</code> for myself as an example.</p></li></ul><h2 id="install" tabindex="-1">Install <a class="header-anchor" href="#install" aria-hidden="true">#</a></h2><p>In Ghost 1.0 or later it uses it&#39;s own CLI called <code>ghost</code> to manage sites, so install it by npm:</p><div class="language-bash"><pre><code><span class="token function">sudo</span> <span class="token function">npm</span> i <span class="token parameter variable">-g</span> ghost-cli
</code></pre></div><p>Then create you site folder(For myself I created it under <code>/usr/share/nginx/</code>):</p><div class="language-bash"><pre><code><span class="token function">sudo</span> <span class="token function">mkdir</span> /usr/share/nginx/ghost
<span class="token builtin class-name">cd</span> /usr/share/nginx/ghost
</code></pre></div><p>Then start the install process:</p><div class="language-bash"><pre><code>ghost <span class="token function">install</span> <span class="token builtin class-name">local</span>
</code></pre></div><p>Here I used <code>ghost install local</code> instead of <code>ghost install</code> to bypass mysql configuration.</p><p>When the installation was successfully done, it runs itself immediately. If you used <code>nginx/Apache</code> for your previous version of ghost, you may directly access this new site from your browser.</p><p>However, it configures your <code>site url</code> default to <code>http://localhost:2368</code>, you need to change it manually, among with other configurations like <code>mail</code>. Under your site root folder:</p><div class="language-bash"><pre><code><span class="token function">vim</span> config.development.json
</code></pre></div><p>This makes your site runs under development mode, you can just copy it to <code>config.production.json</code> to make your site runs in production.</p><p>After you modifying your config file, run:</p><div class="language-bash"><pre><code>ghost restart
</code></pre></div><p>Your site will restart with new configurations and ready to roll! \u{1F609}</p>`,20),i=[n];function r(c,l,d,u,p,h){return t(),e("div",null,i)}var m=o(a,[["render",r]]);export{f as __pageData,m as default};
