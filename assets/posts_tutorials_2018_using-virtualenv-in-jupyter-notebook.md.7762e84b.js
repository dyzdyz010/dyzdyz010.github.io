import{_ as e,c as a,o as n,a as t}from"./app.7001bd85.js";const y='{"title":"Using virtualenv in Jupyter Notebook","description":"","frontmatter":{"title":"Using virtualenv in Jupyter Notebook","date":"2018-05-09T00:09:33.000Z","tags":["python","code","tutorial"],"author":"dyzdyz010","collection":"tutorials"},"headers":[{"level":2,"title":"Prerequisites","slug":"prerequisites"},{"level":2,"title":"Walkthrough","slug":"walkthrough"},{"level":3,"title":"Activate your virtualenv","slug":"activate-your-virtualenv"},{"level":3,"title":"Install ipykernel inside your env","slug":"install-ipykernel-inside-your-env"},{"level":3,"title":"Create kernel using your env","slug":"create-kernel-using-your-env"},{"level":3,"title":"Go ahead and enjoy","slug":"go-ahead-and-enjoy"}],"relativePath":"posts/tutorials/2018/using-virtualenv-in-jupyter-notebook.md"}',r={},s=t(`<ul><li>OS: macOS High Sierra 10.13.4</li><li>Default Python version: 3.6.5</li></ul><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-hidden="true">#</a></h2><ol><li>Have your <code>Jupyter Notebook</code> and <code>virtualenv</code> installed with your default python version</li><li>Have one virtual env created which you want to use</li></ol><h2 id="walkthrough" tabindex="-1">Walkthrough <a class="header-anchor" href="#walkthrough" aria-hidden="true">#</a></h2><h3 id="activate-your-virtualenv" tabindex="-1">Activate your virtualenv <a class="header-anchor" href="#activate-your-virtualenv" aria-hidden="true">#</a></h3><div class="language-bash"><pre><code><span class="token builtin class-name">source</span> <span class="token operator">&lt;</span>envpath<span class="token operator">&gt;</span>/bin/activate
</code></pre></div><h3 id="install-ipykernel-inside-your-env" tabindex="-1">Install ipykernel inside your env <a class="header-anchor" href="#install-ipykernel-inside-your-env" aria-hidden="true">#</a></h3><div class="language-bash"><pre><code><span class="token variable"><span class="token variable">$(</span>yourenv<span class="token variable">)</span></span><span class="token operator">&gt;</span> pip <span class="token function">install</span> ipykernel
</code></pre></div><h3 id="create-kernel-using-your-env" tabindex="-1">Create kernel using your env <a class="header-anchor" href="#create-kernel-using-your-env" aria-hidden="true">#</a></h3><div class="language-bash"><pre><code><span class="token variable"><span class="token variable">$(</span>yourenv<span class="token variable">)</span></span><span class="token operator">&gt;</span> python <span class="token parameter variable">-m</span> ipykernel <span class="token function">install</span> <span class="token parameter variable">--user</span> <span class="token parameter variable">--name</span> myenv --display-name <span class="token string">&quot;Python (myenv)&quot;</span>
</code></pre></div><h3 id="go-ahead-and-enjoy" tabindex="-1">Go ahead and enjoy <a class="header-anchor" href="#go-ahead-and-enjoy" aria-hidden="true">#</a></h3><p>Now open your jupyter notebook and you&#39;ll notice your kernel just created appears along with your default kernel. Enjoy it\u{1F600}</p>`,12),i=[s];function o(l,u,p,d,c,h){return n(),a("div",null,i)}var k=e(r,[["render",o]]);export{y as __pageData,k as default};
